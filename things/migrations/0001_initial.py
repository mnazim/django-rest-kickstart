# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-18 10:14
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import helpers.models
import model_utils.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
        ('helpers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.BigIntegerField(default=helpers.models.getid, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='last modification time')),
                ('depot', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='JSON Depot')),
                ('name', models.CharField(max_length=256)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=256, populate_from=['name'])),
                ('status', model_utils.fields.StatusField(choices=[('draft', 'draft'), ('published', 'published')], default='draft', max_length=100, no_check_for_status=True)),
                ('kind', model_utils.fields.StatusField(choices=[('cake', 'cake'), ('cookie', 'cookie'), ('candy', 'candy')], default='cake', max_length=100, no_check_for_status=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='things', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='helpers.GenericSimpleflakeIDTaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'db_table': 'things',
            },
        ),
    ]
